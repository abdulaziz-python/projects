/* Form Container */
.form-container {
    max-width: 640px;
    margin: 48px auto;
    width: 100%;
  }
  
  /* Form Layout */
  .form-group {
    margin-bottom: 24px;
    position: relative;
  }
  
  /* Labels */
  .form-label {
    display: block;
    color: var(--foreground);
    font-size: 14px;
    font-weight: 500;
    margin-bottom: 8px;
    font-family: "SF Pro Display", -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
  }
  
  /* Helper Text */
  .form-text {
    font-size: 14px;
    color: var(--muted);
    margin-top: 6px;
  }
  
  /* Input Fields */
  .form-control {
    width: 100%;
    height: 40px;
    padding: 8px 12px;
    background-color: var(--card-bg);
    border: 1px solid var(--border);
    border-radius: 6px;
    color: var(--foreground);
    font-family: inherit;
    font-size: 14px;
    line-height: 24px;
    transition: all 0.2s ease;
    -webkit-appearance: none;
    appearance: none;
  }
  
  /* Textarea */
  textarea.form-control {
    height: auto;
    min-height: 120px;
    resize: vertical;
    padding: 12px;
  }
  
  /* Focus States */
  .form-control:focus {
    outline: none;
    border-color: var(--accent);
    box-shadow: 0 0 0 2px var(--hover);
  }
  
  /* Placeholder */
  .form-control::placeholder {
    color: var(--muted);
    opacity: 0.7;
  }
  
  /* Disabled State */
  .form-control:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background-color: rgba(255, 255, 255, 0.01);
  }
  
  /* Error States */
  .form-control.is-invalid {
    border-color: #EF4444;
  }
  
  .form-control.is-invalid:focus {
    box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.1);
  }
  
  .error-message {
    color: #EF4444;
    font-size: 14px;
    margin-top: 6px;
    display: flex;
    align-items: center;
    gap: 6px;
  }
  
  /* Select Inputs */
  select.form-control {
    padding-right: 32px;
    background-image: url("data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M4.94 5.72668L8 8.78668L11.06 5.72668L12 6.66668L8 10.6667L4 6.66668L4.94 5.72668Z' fill='rgba(255,255,255,0.45)'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 8px center;
  }
  
  /* Checkboxes and Radios */
  .form-check {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 8px;
    cursor: pointer;
  }
  
  .form-check-input {
    width: 16px;
    height: 16px;
    margin: 0;
    border: 1px solid var(--border);
    border-radius: 4px;
    background-color: var(--card-bg);
    transition: all 0.2s ease;
    cursor: pointer;
    position: relative;
  }
  
  .form-check-input:checked {
    background-color: var(--accent);
    border-color: var(--accent);
  }
  
  .form-check-input:focus {
    outline: none;
    border-color: var(--accent);
    box-shadow: 0 0 0 2px var(--hover);
  }
  
  .form-check-label {
    font-size: 14px;
    line-height: 20px;
    user-select: none;
  }
  
  /* Form Actions */
  .form-actions {
    display: flex;
    gap: 12px;
    margin-top: 32px;
  }
  
  /* Required Field Indicator */
  .required::after {
    content: "*";
    color: #EF4444;
    margin-left: 4px;
  }
  
  /* Loading State */
  .form-control.is-loading {
    padding-right: 36px;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgba(255,255,255,0.45)' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='12' y1='2' x2='12' y2='6'%3E%3C/line%3E%3Cline x1='12' y1='18' x2='12' y2='22'%3E%3C/line%3E%3Cline x1='4.93' y1='4.93' x2='7.76' y2='7.76'%3E%3C/line%3E%3Cline x1='16.24' y1='16.24' x2='19.07' y2='19.07'%3E%3C/line%3E%3Cline x1='2' y1='12' x2='6' y2='12'%3E%3C/line%3E%3Cline x1='18' y1='12' x2='22' y2='12'%3E%3C/line%3E%3Cline x1='4.93' y1='19.07' x2='7.76' y2='16.24'%3E%3C/line%3E%3Cline x1='16.24' y1='7.76' x2='19.07' y2='4.93'%3E%3C/line%3E%3C/svg%3E");
    background-position: right 8px center;
    background-repeat: no-repeat;
    background-size: 20px;
    animation: rotate 1s linear infinite;
  }
  
  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  
  
